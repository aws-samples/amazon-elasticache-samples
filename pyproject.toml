[tool.poetry]
name = "aws-elasticache-examples"
version = "0.1.0"
description = "AWS ElastiCache examples and demos collection"
authors = ["AWS ElastiCache Team <aws-elasticache-examples@amazon.com>"]
readme = "README.md"
packages = [
    {include = "compression-example"},
    {include = "database-caching"},
    {include = "dynamodb-elasticache-integration"},
    {include = "session-store"},
    {include = "lambda-feature-store"},
    {include = "glide-samples"},
    {include = "webinars"},
    {include = "tools"},
    {include = "blogs"},
]

[tool.poetry.dependencies]
python = "^3.11"
# Core dependencies used across examples
boto3 = "^1.34.29"
redis = "^5.0.1"
valkey-glide = "^1.0.0"
# Common utility libraries
numpy = "^1.24.0"
lz4 = "^4.0.0"
pymysql = "^1.1.1"
# Web framework dependencies
flask = "^2.3.0"
streamlit = "^1.28.0"
# Data processing
pandas = "^2.0.0"
# Environment management
python-dotenv = "^1.0.0"
# Data validation
pydantic = "^2.6.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=.",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = [
    "compression-example",
    "database-caching", 
    "dynamodb-elasticache-integration",
    "session-store",
    "lambda-feature-store",
    "glide-samples",
    "webinars",
    "tools",
    "blogs",
]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    ".venv/*",
    "setup.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["compression_example", "database_caching", "dynamodb_elasticache_integration", "session_store", "lambda_feature_store", "glide_samples", "webinars", "tools", "blogs"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["redis.*", "valkey.*", "pymysql.*", "lz4.*"]
ignore_missing_imports = true